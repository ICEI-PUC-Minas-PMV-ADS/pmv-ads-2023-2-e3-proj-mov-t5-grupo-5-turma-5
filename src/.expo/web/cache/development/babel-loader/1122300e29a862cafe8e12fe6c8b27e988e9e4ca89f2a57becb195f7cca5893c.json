{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport PostagemService from \"../Services/PostagemService\";\nimport UsuarioService from \"../Services/UsuarioService\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar PostagemView = function PostagemView(_ref) {\n  var postagem = _ref.postagem,\n    nomeUsuario = _ref.nomeUsuario;\n  return _jsxs(View, {\n    style: {\n      marginBottom: 16\n    },\n    children: [_jsxs(View, {\n      style: {\n        flexDirection: 'row',\n        alignItems: 'center'\n      },\n      children: [_jsx(Image, {\n        source: {\n          uri: postagem.fotoUsuario\n        },\n        style: {\n          width: 50,\n          height: 50,\n          borderRadius: 25,\n          marginRight: 8\n        }\n      }), _jsx(View, {\n        style: {\n          flex: 1\n        },\n        children: _jsx(Text, {\n          style: {\n            fontWeight: 'bold'\n          },\n          children: nomeUsuario\n        })\n      }), _jsx(TouchableOpacity, {\n        children: _jsx(Text, {\n          children: \"\\uD83D\\uDDE8\\uFE0F\"\n        })\n      })]\n    }), _jsx(View, {\n      style: {\n        marginTop: 8\n      },\n      children: _jsx(Text, {\n        children: postagem.conteudoPostagem\n      })\n    }), _jsxs(View, {\n      style: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        marginTop: 8\n      },\n      children: [_jsx(TouchableOpacity, {\n        children: _jsx(Text, {\n          children: \"\\u2764\\uFE0F\"\n        })\n      }), _jsx(TouchableOpacity, {\n        children: _jsx(Text, {\n          children: \"\\uD83D\\uDDE8\\uFE0F\"\n        })\n      })]\n    })]\n  });\n};\nvar Index = function Index(_ref2) {\n  var navigation = _ref2.navigation;\n  var _useState = useState({\n      usuario: null,\n      postagem: null\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    dadosApi = _useState2[0],\n    setDadosApi = _useState2[1];\n  useEffect(function () {\n    var fetchData = function () {\n      var _ref3 = _asyncToGenerator(function* () {\n        var posts = new PostagemService();\n        try {\n          var postData = yield posts.GetAll();\n          setDadosApi(function (prevDados) {\n            return _objectSpread(_objectSpread({}, prevDados), {}, {\n              postagem: postData\n            });\n          });\n        } catch (error) {\n          console.error('Erro na chamada da API:', error);\n        }\n      });\n      return function fetchData() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n    fetchData();\n  }, []);\n  useEffect(function () {\n    var fetchUserData = function () {\n      var _ref4 = _asyncToGenerator(function* () {\n        var users = new UsuarioService();\n        try {\n          var usersData = yield users.GetAll();\n          var postagemService = new PostagemService();\n          var postagensData = yield postagemService.GetAll();\n          var usuarioFiltrado = usersData.filter(function (user) {\n            return postagensData.some(function (postagem) {\n              return postagem.autorId === user.id;\n            });\n          });\n          setDadosApi(function (prevDados) {\n            return _objectSpread(_objectSpread({}, prevDados), {}, {\n              usuario: usuarioFiltrado\n            });\n          });\n        } catch (error) {\n          console.error('Erro ao buscar usuarios:', error);\n        }\n      });\n      return function fetchUserData() {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n    fetchUserData();\n  }, []);\n  var encontrarNomeUsuario = function encontrarNomeUsuario(authorId) {\n    var usuario = dadosApi.usuario.find(function (user) {\n      return user.id === authorId;\n    });\n    return usuario ? usuario.nomeUsuario : 'Usu√°rio Desconhecido';\n  };\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      padding: 16\n    },\n    children: dadosApi.postagens && dadosApi.postagens.map(function (postagem) {\n      return _jsx(PostagemView, {\n        postagem: postagem,\n        nomeUsuario: encontrarNomeUsuario(postagem.authorId)\n      }, postagem.id);\n    })\n  });\n};\nexport default Index;","map":{"version":3,"names":["React","useState","useEffect","View","Text","Image","TouchableOpacity","PostagemService","UsuarioService","jsx","_jsx","jsxs","_jsxs","PostagemView","_ref","postagem","nomeUsuario","style","marginBottom","children","flexDirection","alignItems","source","uri","fotoUsuario","width","height","borderRadius","marginRight","flex","fontWeight","marginTop","conteudoPostagem","justifyContent","Index","_ref2","navigation","_useState","usuario","_useState2","_slicedToArray","dadosApi","setDadosApi","fetchData","_ref3","_asyncToGenerator","posts","postData","GetAll","prevDados","_objectSpread","error","console","apply","arguments","fetchUserData","_ref4","users","usersData","postagemService","postagensData","usuarioFiltrado","filter","user","some","autorId","id","encontrarNomeUsuario","authorId","find","padding","postagens","map"],"sources":["C:/Users/ggukg/ProjKevin/pmv-ads-2023-2-e3-proj-mov-t5-time5-projApp/src/src/pages/Index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, Text, Image, TouchableOpacity } from 'react-native';\r\nimport PostagemService from '../Services/PostagemService';\r\nimport UsuarioService from '../Services/UsuarioService';\r\n\r\nconst PostagemView = ({ postagem, nomeUsuario }) => (\r\n\r\n    <View style={{ marginBottom: 16 }}>\r\n      <View style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n        {/* Foto do usu√°rio */}\r\n        <Image\r\n          source={{ uri: postagem.fotoUsuario }}\r\n          style={{ width: 50, height: 50, borderRadius: 25, marginRight: 8 }}\r\n        />\r\n  \r\n        {/* Nome do usu√°rio */}\r\n        <View style={{ flex: 1 }}>\r\n          <Text style={{ fontWeight: 'bold' }}>{nomeUsuario}</Text>\r\n        </View>\r\n  \r\n        {/* √çcone para chat */}\r\n        <TouchableOpacity>\r\n          <Text>üó®Ô∏è</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n  \r\n      {/* Conte√∫do da postagem */}\r\n      <View style={{ marginTop: 8 }}>\r\n        <Text>{postagem.conteudoPostagem}</Text>\r\n      </View>\r\n  \r\n      {/* √çcone de cora√ß√£o e √≠cone para comentar */}\r\n      <View style={{ flexDirection: 'row', justifyContent: 'space-between', marginTop: 8 }}>\r\n        {/* √çcone de cora√ß√£o */}\r\n        <TouchableOpacity>\r\n          <Text>‚ù§Ô∏è</Text>\r\n        </TouchableOpacity>\r\n  \r\n        {/* √çcone para comentar */}\r\n        <TouchableOpacity>\r\n          <Text>üó®Ô∏è</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n\r\nconst Index = ({ navigation }) => {\r\n\r\n    const [dadosApi, setDadosApi] = useState({\r\n        usuario: null,\r\n        postagem: null,\r\n    });\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const posts= new PostagemService();\r\n            try {\r\n                const postData = await posts.GetAll();\r\n                setDadosApi((prevDados) => ({ ...prevDados, postagem: postData }));\r\n            } catch (error) {\r\n                console.error('Erro na chamada da API:', error);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const fetchUserData = async () => {\r\n          const users = new UsuarioService();\r\n          try {\r\n            const usersData = await users.GetAll();\r\n            const postagemService = new PostagemService();\r\n            const postagensData = await postagemService.GetAll();\r\n            const usuarioFiltrado = usersData.filter((user) =>\r\n                postagensData.some((postagem) => postagem.autorId === user.id)\r\n                );\r\n            setDadosApi((prevDados) => ({ ...prevDados, usuario: usuarioFiltrado }));\r\n          } catch (error) {\r\n            console.error('Erro ao buscar usuarios:', error);\r\n          }\r\n        };\r\n    \r\n        fetchUserData();\r\n      }, []);\r\n\r\n      const encontrarNomeUsuario = (authorId) => {\r\n        const usuario = dadosApi.usuario.find((user) => user.id === authorId);\r\n        return usuario ? usuario.nomeUsuario : 'Usu√°rio Desconhecido';\r\n      };\r\n\r\n    return (\r\n        <View style={{ flex: 1, padding: 16 }}>\r\n        {dadosApi.postagens &&\r\n          dadosApi.postagens.map((postagem) => (\r\n            <PostagemView\r\n              key={postagem.id}\r\n              postagem={postagem}\r\n              nomeUsuario={encontrarNomeUsuario(postagem.authorId)}\r\n            />\r\n          ))}\r\n      </View>\r\n    )\r\n}\r\n\r\nexport default Index;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}