{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nvar UsuarioService = function () {\n  function UsuarioService() {\n    _classCallCheck(this, UsuarioService);\n    this.url = 'http://localhost:3001/usuarios';\n  }\n  _createClass(UsuarioService, [{\n    key: \"Get\",\n    value: function () {\n      var _Get = _asyncToGenerator(function* (id) {\n        try {\n          var response = yield fetch(`${this.url}/${id}`);\n          if (!response.ok) {\n            throw new Error('Erro ao obter usuário');\n          }\n          return response.json();\n        } catch (error) {\n          console.log(error);\n        }\n      });\n      function Get(_x) {\n        return _Get.apply(this, arguments);\n      }\n      return Get;\n    }()\n  }, {\n    key: \"Post\",\n    value: function () {\n      var _Post = _asyncToGenerator(function* (data) {\n        try {\n          var response = yield fetch(this.url, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n          });\n          if (!response.ok) {\n            throw new Error('Erro ao criar usuário');\n          }\n          return response.json();\n        } catch (error) {\n          console.log(error);\n        }\n      });\n      function Post(_x2) {\n        return _Post.apply(this, arguments);\n      }\n      return Post;\n    }()\n  }, {\n    key: \"Put\",\n    value: function () {\n      var _Put = _asyncToGenerator(function* (id, data) {\n        try {\n          var response = yield fetch(`${this.url}/${id}`, {\n            method: 'PUT',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n          });\n          if (!response.ok) {\n            throw new Error('Erro ao atualizar usuário');\n          }\n          return response.json();\n        } catch (error) {\n          console.log(error);\n        }\n      });\n      function Put(_x3, _x4) {\n        return _Put.apply(this, arguments);\n      }\n      return Put;\n    }()\n  }, {\n    key: \"Exist\",\n    value: function () {\n      var _Exist = _asyncToGenerator(function* (email) {\n        var senha = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n        try {\n          var url = `${this.url}?email=${email}`;\n          if (senha) {\n            url += `&senha=${senha}`;\n          }\n          var response = yield fetch(url);\n          if (!response.ok) {\n            throw new Error('Erro ao verificar se o usuário existe');\n          }\n          var usuarios = yield response.json();\n          return usuarios.length > 0;\n        } catch (error) {\n          console.log(error);\n          return false;\n        }\n      });\n      function Exist(_x5) {\n        return _Exist.apply(this, arguments);\n      }\n      return Exist;\n    }()\n  }]);\n  return UsuarioService;\n}();\nexport default UsuarioService;","map":{"version":3,"names":["UsuarioService","_classCallCheck","url","_createClass","key","value","_Get","_asyncToGenerator","id","response","fetch","ok","Error","json","error","console","log","Get","_x","apply","arguments","_Post","data","method","headers","body","JSON","stringify","Post","_x2","_Put","Put","_x3","_x4","_Exist","email","senha","length","undefined","usuarios","Exist","_x5"],"sources":["C:/Users/ggukg/ProjKevin/pmv-ads-2023-2-e3-proj-mov-t5-time5-projApp/src/src/Services/UsuarioService.js"],"sourcesContent":["class UsuarioService {\r\n    url = 'http://localhost:3001/usuarios';\r\n\r\n    async Get(id) {\r\n        try {\r\n            const response = await fetch(`${this.url}/${id}`);\r\n            if (!response.ok) {\r\n                throw new Error('Erro ao obter usuário');\r\n            }\r\n            return response.json();\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    async Post(data) {\r\n        try {\r\n            const response = await fetch(this.url, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(data),\r\n            });\r\n            if (!response.ok) {\r\n                throw new Error('Erro ao criar usuário');\r\n            }\r\n            return response.json();\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    async Put(id, data) {\r\n        try {\r\n            const response = await fetch(`${this.url}/${id}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(data),\r\n            });\r\n            if (!response.ok) {\r\n                throw new Error('Erro ao atualizar usuário');\r\n            }\r\n            return response.json();\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    async Exist(email, senha = null) {\r\n        try {\r\n            let url = `${this.url}?email=${email}`;\r\n            if (senha) {\r\n                url += `&senha=${senha}`;\r\n            }\r\n            const response = await fetch(url);\r\n            if (!response.ok) {\r\n                throw new Error('Erro ao verificar se o usuário existe');\r\n            }\r\n            const usuarios = await response.json();\r\n            return usuarios.length > 0;\r\n        } catch (error) {\r\n            console.log(error);\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\nexport default UsuarioService;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}