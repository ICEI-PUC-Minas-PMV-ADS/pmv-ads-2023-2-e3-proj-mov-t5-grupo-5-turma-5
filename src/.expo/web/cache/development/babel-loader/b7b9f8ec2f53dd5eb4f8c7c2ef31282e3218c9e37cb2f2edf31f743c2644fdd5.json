{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nvar BibliotecaService = function () {\n  function BibliotecaService() {\n    _classCallCheck(this, BibliotecaService);\n    this.url = 'http://localhost:3000/bibliotecas';\n  }\n  _createClass(BibliotecaService, [{\n    key: \"Get\",\n    value: function () {\n      var _Get = _asyncToGenerator(function* (usuarioId) {\n        try {\n          var response = yield fetch(`${this.url}?usuarioId=${usuarioId}`);\n          if (!response.ok) {\n            throw new Error('Erro ao obter biblioteca');\n          }\n          return response.json();\n        } catch (error) {\n          console.log(error);\n        }\n      });\n      function Get(_x) {\n        return _Get.apply(this, arguments);\n      }\n      return Get;\n    }()\n  }, {\n    key: \"Post\",\n    value: function () {\n      var _Post = _asyncToGenerator(function* (data) {\n        try {\n          var response = yield fetch(this.url, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n          });\n          if (!response.ok) {\n            throw new Error('Erro ao criar biblioteca');\n          }\n          return response.json();\n        } catch (error) {\n          console.log(error);\n        }\n      });\n      function Post(_x2) {\n        return _Post.apply(this, arguments);\n      }\n      return Post;\n    }()\n  }, {\n    key: \"Put\",\n    value: function () {\n      var _Put = _asyncToGenerator(function* () {});\n      function Put() {\n        return _Put.apply(this, arguments);\n      }\n      return Put;\n    }()\n  }, {\n    key: \"Exist\",\n    value: function () {\n      var _Exist = _asyncToGenerator(function* (UsuarioId) {\n        try {\n          var response = yield fetch(`${this.url}?usuarioId=${UsuarioId}`);\n          if (!response.ok) {\n            throw new Error('Erro ao verificar se a biblioteca existe');\n          }\n          var bibliotecas = yield response.json();\n          return bibliotecas.length > 0;\n        } catch (error) {\n          console.log(error);\n          return false;\n        }\n      });\n      function Exist(_x3) {\n        return _Exist.apply(this, arguments);\n      }\n      return Exist;\n    }()\n  }]);\n  return BibliotecaService;\n}();\nexport default BibliotecaService;","map":{"version":3,"names":["BibliotecaService","_classCallCheck","url","_createClass","key","value","_Get","_asyncToGenerator","usuarioId","response","fetch","ok","Error","json","error","console","log","Get","_x","apply","arguments","_Post","data","method","headers","body","JSON","stringify","Post","_x2","_Put","Put","_Exist","UsuarioId","bibliotecas","length","Exist","_x3"],"sources":["C:/Users/ggukg/ProjKevin/pmv-ads-2023-2-e3-proj-mov-t5-time5-projApp/src/src/Services/BibliotecaService.js"],"sourcesContent":["\r\nclass BibliotecaService {\r\n    url = 'http://localhost:3000/bibliotecas';\r\n\r\n    async Get(usuarioId) {\r\n\r\n        try {\r\n            const response = await fetch(`${this.url}?usuarioId=${usuarioId}`);\r\n            if (!response.ok) {\r\n                throw new Error('Erro ao obter biblioteca');\r\n            }\r\n            return response.json();\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    async Post(data) {\r\n\r\n        try {\r\n            const response = await fetch(this.url, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(data),\r\n            });\r\n            if (!response.ok) {\r\n                throw new Error('Erro ao criar biblioteca');\r\n            }\r\n            return response.json();\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n\r\n    async Put() {\r\n\r\n        //Implementar\r\n\r\n    }\r\n\r\n    async Exist(UsuarioId){\r\n        try {\r\n            const response = await fetch(`${this.url}?usuarioId=${UsuarioId}`);\r\n            if (!response.ok) {\r\n                throw new Error('Erro ao verificar se a biblioteca existe');\r\n            }\r\n            const bibliotecas = await response.json();\r\n            return bibliotecas.length > 0;\r\n        } catch (error) {\r\n            console.log(error);\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\nexport default BibliotecaService;\r\n"],"mappings":";;;IACMA,iBAAiB;EAAA,SAAAA,kBAAA;IAAAC,eAAA,OAAAD,iBAAA;IAAA,KACnBE,GAAG,GAAG,mCAAmC;EAAA;EAAAC,YAAA,CAAAH,iBAAA;IAAAI,GAAA;IAAAC,KAAA;MAAA,IAAAC,IAAA,GAAAC,iBAAA,CAEzC,WAAUC,SAAS,EAAE;QAEjB,IAAI;UACA,IAAMC,QAAQ,SAASC,KAAK,CAAE,GAAE,IAAI,CAACR,GAAI,cAAaM,SAAU,EAAC,CAAC;UAClE,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;YACd,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;UAC/C;UACA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;QAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;UACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;QACtB;MACJ,CAAC;MAAA,SAAAG,IAAAC,EAAA;QAAA,OAAAZ,IAAA,CAAAa,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAH,GAAA;IAAA;EAAA;IAAAb,GAAA;IAAAC,KAAA;MAAA,IAAAgB,KAAA,GAAAd,iBAAA,CAED,WAAWe,IAAI,EAAE;QAEb,IAAI;UACA,IAAMb,QAAQ,SAASC,KAAK,CAAC,IAAI,CAACR,GAAG,EAAE;YACnCqB,MAAM,EAAE,MAAM;YACdC,OAAO,EAAE;cACL,cAAc,EAAE;YACpB,CAAC;YACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,IAAI;UAC7B,CAAC,CAAC;UACF,IAAI,CAACb,QAAQ,CAACE,EAAE,EAAE;YACd,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;UAC/C;UACA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;QAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;UACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;QACtB;MAEJ,CAAC;MAAA,SAAAc,KAAAC,GAAA;QAAA,OAAAR,KAAA,CAAAF,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAQ,IAAA;IAAA;EAAA;IAAAxB,GAAA;IAAAC,KAAA;MAAA,IAAAyB,IAAA,GAAAvB,iBAAA,CAED,aAAY,CAIZ,CAAC;MAAA,SAAAwB,IAAA;QAAA,OAAAD,IAAA,CAAAX,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAW,GAAA;IAAA;EAAA;IAAA3B,GAAA;IAAAC,KAAA;MAAA,IAAA2B,MAAA,GAAAzB,iBAAA,CAED,WAAY0B,SAAS,EAAC;QAClB,IAAI;UACA,IAAMxB,QAAQ,SAASC,KAAK,CAAE,GAAE,IAAI,CAACR,GAAI,cAAa+B,SAAU,EAAC,CAAC;UAClE,IAAI,CAACxB,QAAQ,CAACE,EAAE,EAAE;YACd,MAAM,IAAIC,KAAK,CAAC,0CAA0C,CAAC;UAC/D;UACA,IAAMsB,WAAW,SAASzB,QAAQ,CAACI,IAAI,CAAC,CAAC;UACzC,OAAOqB,WAAW,CAACC,MAAM,GAAG,CAAC;QACjC,CAAC,CAAC,OAAOrB,KAAK,EAAE;UACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;UAClB,OAAO,KAAK;QAChB;MACJ,CAAC;MAAA,SAAAsB,MAAAC,GAAA;QAAA,OAAAL,MAAA,CAAAb,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAgB,KAAA;IAAA;EAAA;EAAA,OAAApC,iBAAA;AAAA;AAGL,eAAeA,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}