var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
import axios from 'axios';
import Base from './Base';
import UrlBuilder from './UrlBuilder';
export default class Singular extends Base {
    constructor() {
        super(...arguments);
        this.isPlural = false;
    }
    one() {
        return __awaiter(this, void 0, void 0, function* () {
            const url = new UrlBuilder(this.server, this.api, this.token).toString();
            const res = yield axios.get(url);
            return res.data;
        });
    }
    update(data, override) {
        return __awaiter(this, void 0, void 0, function* () {
            this.val(data);
            const url = new UrlBuilder(this.server, this.api, this.token).toString();
            const res = yield (override ? axios.put(url, data) : axios.patch(url, data));
            return res.data;
        });
    }
}
